{"version":3,"sources":["components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js","components/Controls/Controls.module.css","components/Dashboard/Dashboard.module.css"],"names":["module","exports","Controls","depositOn","withdrawOn","onChange","className","style","controls","controls_input","type","name","controls_button","onClick","Balance","deposit","balance","withdrow","balanceContainer","span1","role","aria-label","span2","Transaction","trans","transactionContainer","map","prop","key","id","amount","date","notifyA","toast","containerId","notifyB","Dashboard","state","transactions","e","setState","target","value","addTransation","transAction","uuid","Date","toLocaleDateString","toLocaleTimeString","balanceChange","localStorage","getItem","ourBalance","this","JSON","parse","error","console","log","prevProps","prevState","setItem","stringify","reduce","acc","item","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.453268f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionContainer\":\"TransactionHistory_transactionContainer__24LT8\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nfunction Controls({ depositOn, withdrawOn, onChange }) {\n  return (\n    <section className={style.controls}>\n      <input\n        className={style.controls_input}\n        onChange={onChange}\n        type=\"number\"\n        name=\"amount\"\n      />\n      <button\n        className={style.controls_button}\n        onClick={depositOn}\n        type=\"button\"\n      >\n        Deposit\n      </button>\n      <button\n        className={style.controls_button}\n        onClick={withdrawOn}\n        type=\"button\"\n      >\n        Withdraw\n      </button>\n    </section>\n  );\n}\nControls.propTypes = {\n  depositOn: PropTypes.func.isRequired,\n  withdrawOn: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../Dashboard/Dashboard.module.css';\n\nfunction Balance({ deposit, balance, withdrow }) {\n  return (\n    <section className={style.balanceContainer}>\n      <span>\n        <span className={style.span1} role=\"img\" aria-label=\"top\">\n          &#8593;\n        </span>\n        {deposit}$\n      </span>\n      <span>\n        <span className={style.span2} role=\"img\" aria-label=\"down\">\n          &darr;\n        </span>\n        {withdrow}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n}\nBalance.propTypes = {\n  deposit: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n  withdrow: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nfunction Transaction({ trans }) {\n  return (\n    <table className={style.transactionContainer}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {trans.map(prop => (\n          <tr key={prop.id}>\n            <td>{prop.type}</td>\n            <td>{prop.amount}</td>\n            <td>{prop.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransaction.propTypes = {\n  trans: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      date: PropTypes.string,\n    }),\n  ).isRequired,\n};\nexport default Transaction;\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport uuid from 'uuid';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport Transaction from '../TransactionHistory/TransactionHistory';\n\nconst notifyA = () =>\n  toast('На счету недостаточно средств для проведения операции!', {\n    containerId: 'A',\n  });\nconst notifyB = () =>\n  toast('Введите сумму для проведения операции!', { containerId: 'B' });\n\nclass Dashboard extends Component {\n  state = { amount: 0, balance: 0, deposit: 0, withdrow: 0, transactions: [] };\n\n  componentDidMount() {\n    try {\n      const balanceChange = localStorage.getItem('transactions');\n      const ourBalance = localStorage.getItem('balance');\n      if (balanceChange) {\n        this.setState({ transactions: JSON.parse(balanceChange) });\n      }\n      if (ourBalance) {\n        this.setState({ balance: JSON.parse(ourBalance) });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n  };\n\n  withdrawOn = () => {\n    if (+this.state.amount <= +this.state.balance) {\n      this.setState(state => ({\n        balance: state.balance - state.amount,\n      }));\n      this.setState(state => ({\n        withdrow: state.withdrow + state.amount,\n      }));\n      this.addTransation('WITHDRAW');\n    } else {\n      notifyA();\n    }\n  };\n\n  depositOn = () => {\n    if (this.state.amount > 0) {\n      this.setState(state => ({\n        balance: state.balance + state.amount,\n      }));\n      this.setState(state => ({\n        deposit: state.deposit + state.amount,\n      }));\n\n      this.addTransation('DEPOSIT');\n    } else {\n      notifyB();\n    }\n  };\n\n  addTransation = type => {\n    const transAction = {\n      id: uuid(),\n      type,\n      amount: this.state.amount,\n      date: new Date().toLocaleDateString() + new Date().toLocaleTimeString(),\n    };\n    this.setState(state => ({\n      transactions: [...state.transactions, transAction],\n    }));\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n\n    const deposit = transactions.reduce(\n      (acc, item) => (item.type === 'deposit' ? acc + item.amount : acc),\n      0,\n    );\n\n    const withdrow = transactions.reduce(\n      (acc, item) => (item.type === 'withdraw' ? acc + item.amount : acc),\n      0,\n    );\n\n    return (\n      <div className=\"Reader\">\n        <ToastContainer />\n        <Controls\n          withdrawOn={this.withdrawOn}\n          depositOn={this.depositOn}\n          onChange={this.onChange}\n        />\n        <Balance deposit={deposit} balance={balance} withdrow={withdrow} />\n        <Transaction trans={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport DashBoard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <div>\n    <DashBoard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__ACqYP\",\"controls_input\":\"Controls_controls_input__2pd3W\",\"controls_button\":\"Controls_controls_button__vGGmR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceContainer\":\"Dashboard_balanceContainer__2BN0t\",\"span1\":\"Dashboard_span1__1JMng\",\"span2\":\"Dashboard_span2__2R60c\"};"],"sourceRoot":""}